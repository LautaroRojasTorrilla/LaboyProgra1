/*
 * Auxiliar.c
 *
 *  Created on: 4 oct. 2022
 *      Author: Rojas Torrilla Lautaro
 */

#include "Auxiliar.h"

//

/// @fn int eAuxiliar_initArray(eAuxiliar[], eLibro[], int)
/// @brief Inicializa el array auxiliar
///
/// @param arrayAux array a evaluar
/// @param arrayLibro array a evaluar
/// @param len tamaño del array
/// @return -1 si no pasa las validaciones, - 2 error len, -3 error array null, 0 si inicializa ok
int eAuxiliar_initArray(eAuxiliar arrayAux[], eLibro arrayLibro[], int len)
{
	int retorno = -1;
	int i;

	if (arrayAux != NULL)
	{
		if (len > 0)
		{
			retorno=0;
			for (i = 0; i < len; ++i)
			{
				arrayAux[i].isEmpty = arrayLibro[i].isEmpty;
				arrayAux[i].auxFecha = arrayLibro[i].fechaDePublicacion;
				arrayAux[i].contador = LIBRE;
				arrayAux[i].contadorNoSup = LIBRE;
				arrayAux[i].contadorFecha = LIBRE;
				arrayAux[i].acumulador = LIBRE;
			}
		}else{
			retorno = -2;
		}
	}else{
		retorno= -3;
	}
	return retorno;
}

/// @fn int eAuxiliar_Count(eAuxiliar[], eLibro[], int)
/// @brief funcion para contar cantidad de libros
///
/// @param arrayAux array a evaluar
/// @param arrayLibro array a evaluar
/// @param len tamaño del array
/// @return el contador de libros
int eAuxiliar_Count(eAuxiliar arrayAux[], eLibro arrayLibro[], int len)
{
	int i;
	int j;

	for (i = 0; i < len; i++)
	{
		for(j = 0; j < len; j++)
		{
			if (arrayAux[i].isEmpty == OCUPADO && arrayLibro[j].isEmpty == OCUPADO)
			{
				if (arrayAux[i].isEmpty == arrayLibro[j].isEmpty)
				{
					arrayAux[i].contador++;
				}
			}
		}
	}
	return arrayAux[i].contador;
}

/// @fn float eAuxiliar_Accum(eAuxiliar[], eLibro[], int)
/// @brief funcion para acumular
///
/// @param arrayAux array a evaluar
/// @param arrayLibro array a evaluar
/// @param len tamaño del array
/// @return retorna el acumulador
float eAuxiliar_Accum(eAuxiliar arrayAux[], eLibro arrayLibro[], int len)
{
	int i;
	int j;

	for (i = 0; i < len; i++)
	{
		for(j = 0; j < len; j++)
		{
			if (arrayAux[i].isEmpty == OCUPADO && arrayLibro[j].isEmpty == OCUPADO)
			{
				arrayAux[i].acumulador = arrayAux[i].acumulador + arrayLibro[j].importe;
			}
		}
	}
	return arrayAux[i].acumulador;
}

/// @fn int eAuxiliar_Dividir(float*, int, int)
/// @brief realiza una operacion de divicion
///
/// @param pResultado puntero a evaluar
/// @param operador1 variable
/// @param operador2 variable
/// @return retorno -1 si no pasa la validacion, 0 si divide ok
int eAuxiliar_Dividir(float *pResultado, int operador1, int operador2)
{
	float resultado;
	int retorno = -1;

	if (pResultado != NULL && operador2 != 0)
	{
		resultado = (float) operador1 / operador2;
		*pResultado = resultado;
		retorno = 0;
	}

	return retorno;
}

/// @fn int eAuxiliar_CountNoSup(eAuxiliar[], eLibro[], int, float)
/// @brief funcion para contar los que no superan el promedio
///
/// @param arrayAux array a evaluar
/// @param arrayLibro array a evaluar
/// @param len tamaño del array
/// @param promedio variable
/// @return retorna el contador
int eAuxiliar_CountNoSup(eAuxiliar arrayAux[], eLibro arrayLibro[], int len, float promedio)
{
	int i;
	int j;

	for (i = 0; i < len; i++)
	{
		for(j = 0; j < len; j++)
		{
			if (arrayAux[i].isEmpty == OCUPADO && arrayLibro[j].isEmpty == OCUPADO)
			{
				if ((arrayAux[i].isEmpty == arrayLibro[j].isEmpty) &&
						(promedio > arrayLibro[j].importe) )
				{
					arrayAux[i].contadorNoSup++;
				}
			}
		}
	}
	return arrayAux[i].contadorNoSup;
}

/// @fn int eAuxiliar_CountFecha(eAuxiliar[], eLibro[], int, int)
/// @brief contador para fecha posterior
///
/// @param arrayAux array a evaluar
/// @param arrayLibro array a evaluar
/// @param len tamaño del array
/// @param anio variable
/// @return retorna el contador
int eAuxiliar_CountFecha(eAuxiliar arrayAux[], eLibro arrayLibro[], int len, int anio)
{
	int i;
	int j;

	for (i = 0; i < len; i++)
	{
		for(j = 0; j < len; j++)
		{
			if (arrayAux[i].isEmpty == OCUPADO && arrayLibro[j].isEmpty == OCUPADO)
			{
				if ((arrayAux[i].isEmpty == arrayLibro[j].isEmpty) &&
						(arrayLibro[j].fechaDePublicacion.anio > anio))
				{
					arrayAux[i].contadorFecha++;
				}
			}
		}
	}
	return arrayAux[i].contadorFecha;
}
